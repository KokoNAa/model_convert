name: Convert Custom ONNX Models  # 更新工作流名称

on:
  workflow_dispatch:
    inputs:
      onnx_model:
        description: 'URL or repo path to your ONNX model'
        required: true  # 添加输入参数
  push: ...  # 保持原有触发条件
  pull_request: ...  # 保持原有触发条件

jobs:
  use_custom_onnx:  # 替换原来的 pt2onnx job
    name: Load Custom ONNX
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Fetch custom ONNX model
      run: |
        mkdir -p yolo/onnx
        # 从用户输入获取模型路径/URL
        MODEL_SOURCE="${{ github.event.inputs.onnx_model }}"
        
        if [[ $MODEL_SOURCE == http* ]]; then
          wget $MODEL_SOURCE -O yolo/onnx/yolo.onnx
        else
          cp $MODEL_SOURCE yolo/onnx/yolo.onnx
        fi
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: onnx_artifacts
        path: yolo/onnx/*.onnx

  onnx2rknn:
    needs: [use_custom_onnx]  # 依赖新任务
    strategy:
      matrix:
        runs-on: [ubuntu-22.04]
    runs-on: ${{ matrix.runs-on }}
    container:
      image: kaylor/rk3588_onnx2rknn:2.3.2
      options: --privileged

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1000
        fetch-tags: true

    - name: Download artifacts from pt2onnx
      uses: actions/download-artifact@v4
      with:
        name: onnx_artifacts
        path: onnx_artifacts

    - name: Run build script
      run: |
        SRC_PATH=$(pwd)
        cd yolo
        mkdir -pv rknn
        cp -vr ${SRC_PATH}/onnx_artifacts/*.onnx ./rknn/
        python convert.pyc rknn/yolo.onnx rk3588 i8 rknn/yolo.rknn


    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: rknn_artifacts
        path: yolo/rknn/*.rknn

  onnx2om:
    needs: [pt2onnx]
    strategy:
      matrix:
        runs-on: [ubuntu-22.04]
    runs-on: ${{ matrix.runs-on }}
    container:
      image: kaylor/atc
      options: --privileged

    steps:
    - name: Download artifacts from pt2onnx
      uses: actions/download-artifact@v4
      with:
        name: onnx_artifacts
        path: onnx_artifacts

    - name: Run build script
      shell: bash
      run: |
        SRC_PATH=$(pwd)
        mkdir -pv om
        cp -vr ${SRC_PATH}/onnx_artifacts/*.onnx ./om/
        source /usr/local/Ascend/ascend-toolkit/set_env.sh
        export LD_LIBRARY_PATH=/usr/local/Ascend/ascend-toolkit/latest/x86_64-linux/devlib/:$LD_LIBRARY_PATH
        cd om
        atc --model=yolo.onnx --framework=5 --output=yolo --soc_version=Ascend310B4


    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: om_artifacts
        path: om/*.om
